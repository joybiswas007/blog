package template 

import (
	"fmt"
	"github.com/joybiswas007/blog/cmd/web"
	"github.com/joybiswas007/blog/internal/database"
	"github.com/joybiswas007/blog/config"
)

templ Post(blog config.Blog, post, prevPost, nextPost *database.Post) {
	@Base(blog, post.Title) {
		<div class="space-y-8">
			<div class="flex items-baseline gap-2 text-green-500">
				<span class="text-xl font-bold">$</span>
				<p class="text-green-300 font-medium">cat ./posts/{ post.Slug }.md</p>
			</div>
			<article class="border-l-4 border-green-800 pl-6 ml-4 space-y-8">
				<header class="space-y-4">
					<h1 class="text-2xl text-green-300">{ post.Title }</h1>
					<div class="text-green-600 text-sm flex flex-wrap gap-3 items-center">
						<time>{ post.CreatedAt.Format("2006-01-02 3:04:05 PM") }</time>
						<span>|</span>
						<span>{ web.CalculateReadTime(post.Content) }</span>
						<span>|</span>
						<span>{ post.Author }</span>
					</div>
					if len(post.Tags) > 0 {
						<div class="flex flex-wrap gap-3 text-sm">
							for _, tag := range post.Tags {
								<a
									href={ templ.URL(fmt.Sprintf("/?tag=%s", tag)) }
									class="text-green-500 hover:text-green-400 bg-green-900/30 px-3 py-1 rounded shadow-sm transition-shadow hover:shadow-md"
								>
									#{ tag }
								</a>
							}
						</div>
					}
				</header>
				<div class="prose prose-invert max-w-none">
					@web.Unsafe(web.MarkdownToHTML(post.Content))
				</div>
				<div class="pt-6 border-t border-green-800/50">
					<div class="flex flex-col sm:flex-row justify-between items-center gap-6">
						if prevPost != nil {
							<a
								href={ templ.URL(fmt.Sprintf("/posts/%s", prevPost.Slug)) }
								class="flex items-center text-green-300 hover:text-green-200 group w-full sm:w-auto"
							>
								<span class="text-green-500 mr-2 group-hover:-translate-x-1 transition-transform">←</span>
								<div class="truncate max-w-xs">
									<span class="text-xs text-green-500 block">Previous</span>
									<span class="font-medium">{ prevPost.Title }</span>
								</div>
							</a>
						} else {
							<div class="w-full sm:w-auto"></div>
						}
						if nextPost != nil {
							<a
								href={ templ.URL(fmt.Sprintf("/posts/%s", nextPost.Slug)) }
								class="flex items-center text-green-300 hover:text-green-200 group w-full sm:w-auto text-right justify-end"
							>
								<div class="truncate max-w-xs">
									<span class="text-xs text-green-500 block">Next</span>
									<span class="font-medium">{ nextPost.Title }</span>
								</div>
								<span class="text-green-500 ml-2 group-hover:translate-x-1 transition-transform">→</span>
							</a>
						} else {
							<div class="w-full sm:w-auto"></div>
						}
					</div>
				</div>
			</article>
		</div>
	}
}

templ Tags(blog config.Blog, tags []*database.Tag) {
	@Base(blog, "tags") {
		<div class="space-y-6">
			<div class="flex items-baseline gap-2">
				<span class="text-green-500">$</span>
				<p>ls ./tags</p>
			</div>
			<div class="border-l-2 border-green-800 pl-4 ml-2 space-y-1">
				if len(tags) > 0 {
					for _, tag := range tags {
						<a
							href={ templ.URL(fmt.Sprintf("/?tag=%s", tag.Name)) }
							class="flex items-baseline gap-2 hover:bg-green-900/30 p-2 rounded group"
						>
							<span class="text-green-500">></span>
							<span class="text-green-300 group-hover:text-green-200 text-base">{ tag.Name }</span>
							<span class="text-green-600 text-sm">({ tag.PostCount })</span>
						</a>
					}
				} else {
					<div class="flex items-baseline gap-2 text-green-600">
						<span class="text-green-500">></span>
						<p>No tags found</p>
					</div>
				}
			</div>
		</div>
	}
}

templ Archives(blog config.Blog, lists []database.YearlyStats) {
	@Base(blog, "archives") {
		<div class="space-y-6">
			<div class="flex items-baseline gap-2">
				<span class="text-green-500">$</span>
				<p>ls ./archives</p>
			</div>
			<div class="border-l-2 border-green-800 pl-4 ml-2 space-y-6">
				<section class="space-y-4">
					<h2 class="text-lg text-green-300">$ cat rss.xml</h2>
					<div class="flex items-baseline gap-2">
						<span class="text-green-500">></span>
						<p>Blog feed available at:</p>
					</div>
					<a
						target="_blank"
						href="/rss.xml"
						class="flex items-center gap-2 p-3 hover:bg-green-900/30 rounded border border-green-800 hover:text-green-300"
					>
						<span class="text-green-500">></span>
						<span class="underline">/rss.xml</span>
					</a>
				</section>
				<section class="space-y-4">
					<h2 class="text-lg text-green-300">$ ls --by-year</h2>
					<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3">
						for _, list := range lists {
							<a
								href={ templ.URL(fmt.Sprintf("/archives/%d", list.Year)) }
								class="flex items-baseline gap-2 p-3 hover:bg-green-900/30 rounded border border-green-800 hover:text-green-300"
							>
								<span class="text-green-500">></span>
								<span>
									{ fmt.Sprintf("%d", list.Year) }
									<span class="text-green-600 text-xs ml-1">({ list.PostCount })</span>
								</span>
							</a>
						}
					</div>
				</section>
			</div>
		</div>
	}
}

templ ArchiveByYear(blog config.Blog, year int, posts []database.Post) {
	@Base(blog, fmt.Sprintf("archives - %d", year)) {
		<div class="space-y-6">
			<div class="flex items-baseline gap-2">
				<span class="text-green-500">$</span>
				<p>ls ./archives/{ year }</p>
			</div>
			<div class="border-l-2 border-green-800 pl-4 ml-2 space-y-4">
				if len(posts) == 0 {
					<div class="flex items-baseline gap-2 text-green-600">
						<span class="text-green-500">></span>
						<p>No posts found in archives directory</p>
					</div>
				} else {
					<div class="space-y-2">
						<div class="flex items-baseline gap-2 text-green-500 text-xs">
							<span>></span>
							<span class="w-[28rem]">TITLE</span>
							<span class="w-32">DATE</span>
						</div>
						for _, post := range posts {
							<a
								href={ templ.URL(fmt.Sprintf("/posts/%s", post.Slug)) }
								class="flex items-baseline gap-2 hover:bg-green-900/30 p-2 rounded group"
							>
								<span class="text-green-500">></span>
								<span class="w-[28rem] truncate group-hover:text-green-300">
									{ post.Title }
								</span>
								<span class="text-green-600 text-xs w-32">
									{ post.CreatedAt.Format("2006-01-02") }
								</span>
							</a>
						}
					</div>
				}
			</div>
			<div class="border-l-2 border-green-800 pl-4 ml-2 pt-4">
				<a
					href="/archives"
					class="flex items-center gap-2 text-green-500 hover:text-green-300"
				>
					<span class="text-green-500">cd ..</span>
					<span>Back to archives</span>
				</a>
			</div>
		</div>
	}
}
